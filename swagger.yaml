swagger: '2.0'
info:
  description: Project created in order to simplify work with docker in GUI.
  version: 1.0.0
  title: Docker dashboard
  contact:
    name: Docker dash team
    url: 'https://github.com/petrleocompel/docker-dash/issues'
  termsOfService: 'http://swagger.io/terms/'
host: 'localhost:5000'
basePath: /api
tags:
  - name: Read more on
    description: Manual/Api
    externalDocs:
      description: Find out more
      url: 'https://github.com/petrleocompel/docker-dash/blob/master/README.md'
  - name: docker-dash
    description: Website
    externalDocs:
      description: Find out more
      url: 'https://github.com/petrleocompel/docker-dash'
schemes:
  - http
paths:
  /get-all:
    get:
      tags:
        - Docker
      summary: Get all groups
      description: >-
        Return docker groups and its content such as group named environments
        containing services
      operationId: getAll
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Groups'
        '400':
          description: Invalid status value
  /environment:
    get:
      tags:
        - Environment
      summary: Get the services of the group named Environment
      description: Returns array of containers
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Environment'
  '/environment/{id}':
    get:
      tags:
        - Environment
      summary: Get a service selected  by its ID
      description: ''
      operationId: environmentGet
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Environment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Environment'
        '404':
          description: A container with the specified Environment ID was not found.
    delete:
      tags:
        - Environment
      summary: Delete a service selected by its ID
      description: ''
      operationId: environmentDelete
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Environment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '404':
          description: A container with the specified Environment ID was not found.
  '/environment/{id}/stop':
    post:
      tags:
        - Environment
      summary: Stop a service selected by its ID
      description: ''
      operationId: environmentStop
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Environment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/environment/{id}/start':
    post:
      tags:
        - Environment
      summary: Start a service selected by its ID
      description: ''
      operationId: environmentStart
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Environment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/environment/{id}/restart':
    post:
      tags:
        - Environment
      summary: Restart a service selected by its ID
      description: ''
      operationId: environmentRestart
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Environment
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/instance/{id}':
    get:
      tags:
        - Instance
      summary: Get an instance selected by its ID
      description: ''
      operationId: instanceGet
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Instance
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InstanceExt'
        '404':
          description: A container with the specified Instance ID was not found.
    delete:
      tags:
        - Instance
      summary: Delete selected instance by its ID
      description: ''
      operationId: instanceDelete
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected Instance
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/instance/{id}/stop':
    post:
      tags:
        - Instance
      summary: Stop an instance selected by its ID
      description: ''
      operationId: instanceStop
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected container
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/instance/{id}/start':
    post:
      tags:
        - Instance
      summary: Start an instance selected by its ID
      description: ''
      operationId: instanceStart
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected container
          required: true
          type: string
      responses:
        '200':
          description: successful operation
  '/instance/{id}/restart':
    post:
      tags:
        - Instance
      summary: Restart an instance selected by its ID
      description: ''
      operationId: instanceRestart
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: name of selected container
          required: true
          type: string
      responses:
        '200':
          description: successful operation
definitions:
  Groups:
    type: object
    properties:
      environments:
        type: array
        items:
          $ref: '#/definitions/Environment'
      others:
        type: array
        items:
          $ref: '#/definitions/Instance'
  Environment:
    type: object
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/Instance'
  Instance:
    type: object
    properties:
      id:
        type: string
      path:
        type: string
      args:
        type: array
        items:
          type: string
      image:
        type: string
      name:
        type: string
  InstanceExt:
    allOf:
      - $ref: '#/definitions/Instance'
      - properties:
          hostname:
            type: string
          domainname:
            type: string
          user:
            type: string
          attachStdin:
            type: boolean
          attachStdout:
            type: boolean
          attchaStderr:
            type: boolean
          exposedPorts:
            type: object
            additionalProperties:
              type: object
          volumes:
            type: object
            additionalProperties:
              type: object
          tty:
            type: boolean
          openStdin:
            type: boolean
          stdinOnce:
            type: boolean
          env:
            type: array
            items:
              type: string
          cmd:
            type: array
            items:
              type: string
          argsEscaped:
            type: boolean
          image:
            type: string
          workingDir:
            type: string
          entrypoint:
            type: string
          onBuild:
            type: string
          labels:
            type: object
            additionalProperties:
              type: string